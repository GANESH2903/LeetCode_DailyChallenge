class Solution {
    public int trap(int[] height) {
        int[] leftMaxElevation = new int[height.length];
        leftMaxElevation[0] = height[0];
        for(int i = 1 ; i < height.length; i++){
            leftMaxElevation[i] = Math.max(leftMaxElevation[i-1] , height[i]);
        }
        int[] rigthMaxElevation  = new int[height.length];
        rigthMaxElevation[height.length-1] = height[height.length-1];
        for(int i = height.length-2 ; i >= 0; i--){
            rigthMaxElevation[i] = Math.max(height[i] , rigthMaxElevation[i+1]);
        }
        int units = 0;
        for(int i = 0 ;  i  < leftMaxElevation.length; i++){
            units = units + (Math.min(leftMaxElevation[i] ,rigthMaxElevation[i] )  - height[i]);
        }
        return units;
    }
}
